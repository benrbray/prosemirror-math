{"version":3,"file":"index.js","sources":["../src/commands/collapse-math-cmd.ts","../src/math-nodeview.ts","../src/math-plugin.ts","../src/plugins/math-paste-rules.ts","../src/math-schema.ts","../src/plugins/math-backspace.ts","../src/plugins/math-inputrules.ts","../src/plugins/math-select.ts","../src/commands/insert-math-cmd.ts","../src/utils/text-serializer.ts"],"sourcesContent":["import { Command } from \"prosemirror-commands\";\nimport { EditorState, TextSelection, Transaction } from \"prosemirror-state\";\nimport { EditorView } from \"prosemirror-view\";\n\n/**\n * A ProseMirror command for determining whether to exit a math block, based on\n * specific conditions.  Normally called when the user has \n * \n * @param outerView The main ProseMirror EditorView containing this math node.\n * @param dir Used to indicate desired cursor position upon closing a math node.\n *     When set to -1, cursor will be placed BEFORE the math node.\n *     When set to +1, cursor will be placed AFTER the math node.\n * @param borderMode An exit condition based on cursor position and direction.\n * @param requireEmptySelection When TRUE, only exit the math node when the\n *    (inner) selection is empty.\n * @returns A new ProseMirror command based on the input configuration.\n */\nexport function collapseMathCmd(\n\touterView: EditorView,\n\tdir: (1|-1),\n\trequireOnBorder: boolean,\n\trequireEmptySelection: boolean = true,\n): Command {\n\t// create a new ProseMirror command based on the input conditions\n\treturn (innerState: EditorState, dispatch: ((tr: Transaction) => void)|undefined) => {\n\t\t// get selection info\n\t\tlet outerState: EditorState = outerView.state;\n\t\tlet { to : outerTo, from : outerFrom } = outerState.selection;\n\t\tlet { to : innerTo, from : innerFrom } = innerState.selection;\n\n\t\t// only exit math node when selection is empty\n\t\tif(requireEmptySelection && innerTo !== innerFrom) { return false; }\n\t\tlet currentPos: number = (dir > 0) ? innerTo : innerFrom;\n\n\t\t// when requireOnBorder is TRUE, collapse only when cursor\n\t\t// is about to leave the bounds of the math node\n\t\tif(requireOnBorder) {\n\t\t\t// (subtract two from nodeSize to account for start and end tokens)\n\t\t\tlet nodeSize = innerState.doc.nodeSize - 2;\n\n\t\t\t// early return if exit conditions not met\n\t\t\tif(dir > 0 && currentPos < nodeSize) { return false; }\n\t\t\tif(dir < 0 && currentPos > 0)        { return false; }\n\t\t}\n\n\t\t// all exit conditions met, so close the math node by moving the cursor outside\n\t\tif(dispatch) {\n\t\t\t// set outer selection to be outside of the nodeview\n\t\t\tlet targetPos: number = (dir > 0) ? outerTo : outerFrom;\n\n\t\t\touterView.dispatch(\n\t\t\t\touterState.tr.setSelection(\n\t\t\t\t\tTextSelection.create(outerState.doc, targetPos)\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// must return focus to the outer view, otherwise no cursor will appear\n\t\t\touterView.focus();\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n}","/*---------------------------------------------------------\n *  Author: Benjamin R. Bray\n *  License: MIT (see LICENSE in project root for details)\n *--------------------------------------------------------*/\n\n// prosemirror imports\nimport { Node as ProseNode } from \"prosemirror-model\";\nimport { EditorState, Transaction, TextSelection, NodeSelection, PluginKey } from \"prosemirror-state\";\nimport { NodeView, EditorView, Decoration } from \"prosemirror-view\";\nimport { StepMap } from \"prosemirror-transform\";\nimport { keymap } from \"prosemirror-keymap\";\nimport { newlineInCode, chainCommands, deleteSelection, liftEmptyBlock, Command } from \"prosemirror-commands\";\n\n// katex\nimport katex, { ParseError, KatexOptions } from \"katex\";\nimport { nudgeCursorBackCmd, nudgeCursorForwardCmd } from \"./commands/move-cursor-cmd\";\nimport { collapseMathCmd } from \"./commands/collapse-math-cmd\";\nimport { IMathPluginState } from \"./math-plugin\";\n\n//// INLINE MATH NODEVIEW //////////////////////////////////\n\ninterface IMathViewOptions {\n\t/** Dom element name to use for this NodeView */\n\ttagName?: string;\n\t/** Whether to render this node as display or inline math. */\n\tkatexOptions?:KatexOptions;\n}\n\nexport class MathView implements NodeView {\n\n\t// nodeview params\n\tprivate _node: ProseNode;\n\tprivate _outerView: EditorView;\n\tprivate _getPos: (() => number);\n\n\t// nodeview dom\n\tdom: HTMLElement;\n\tprivate _mathRenderElt: HTMLElement | undefined;\n\tprivate _mathSrcElt: HTMLElement | undefined;\n\tprivate _mathEditorElt: HTMLElement | undefined;\n\tprivate _innerView: EditorView | undefined;\n\n\t// internal state\n\tcursorSide: \"start\" | \"end\";\n\tprivate _isBlockMath: boolean;\n\tprivate _katexOptions: KatexOptions;\n\tprivate _tagName: string;\n\tprivate _editorActive: boolean;\n\tprivate _renderActive: boolean;\n\tprivate _mathPluginKey: PluginKey<IMathPluginState>;\n\n\t// == Lifecycle ===================================== //\n\n\t/**\n\t * @param isBlockMath Set to TRUE for block math, FALSE for inline math.\n\t *     Currently, only affects the math preview pane.\n\t * @param onDestroy Callback for when this NodeView is destroyed.  \n\t *     This NodeView should unregister itself from the list of ICursorPosObservers.\n\t * \n\t * Math Views support the following options:\n\t * @option displayMode If TRUE, will render math in display mode, otherwise in inline mode.\n\t * @option tagName HTML tag name to use for this NodeView.  If none is provided,\n\t *     will use the node name with underscores converted to hyphens.\n\t */\n\tconstructor(\n\t\tnode: ProseNode,\n\t\tview: EditorView, \n\t\tgetPos: (() => number), \n\t\toptions: IMathViewOptions = {}, \n\t\tisBlockMath: boolean,\n\t\tmathPluginKey: PluginKey<IMathPluginState>\n\t) {\n\t\t// store arguments\n\t\tthis._node = node;\n\t\tthis._outerView = view;\n\t\tthis._getPos = getPos;\n\t\tthis._isBlockMath = isBlockMath;\n\t\tthis._mathPluginKey = mathPluginKey;\n\n\t\t// editing state\n\t\tthis.cursorSide = \"start\";\n\t\tthis._editorActive = false;\n\t\tthis._renderActive = true;\n\n\t\t// options\n\t\tthis._katexOptions = Object.assign({ globalGroup: true, throwOnError: false }, options.katexOptions);\n\t\tthis._tagName = options.tagName || this._node.type.name.replace(\"_\", \"-\");\n\n\t\t// create dom representation of nodeview\n\t\tthis.dom = document.createElement(this._tagName);\n\t\tthis.dom.classList.add(\"math-node\");\n\n\t\tthis._mathRenderElt = document.createElement(\"span\");\n\t\tthis._mathRenderElt.textContent = \"\";\n\t\tthis._mathRenderElt.classList.add(\"math-render\");\n\t\tthis.dom.appendChild(this._mathRenderElt);\n\n\t\t// wrapper for the math source code\n\t\tthis._mathSrcElt = document.createElement(\"span\");\n\t\tthis._mathSrcElt.classList.add(\"math-src\");\n\t\tthis.dom.appendChild(this._mathSrcElt);\n\n\t\t// ensure \n\t\tthis.dom.addEventListener(\"click\", () => this.ensureFocus());\n\n\t\t// render initial content\n\t\tthis.renderMath();\n\t}\n\n\t/**\n\t * Destroy the NodeView, leaving it in an invalid state.\n\t */\n\tdestroy() {\n\t\t// close the inner editor without rendering\n\t\tthis.closeEditor(false);\n\n\t\t// clean up dom elements\n\t\tif (this._mathRenderElt) {\n\t\t\tthis._mathRenderElt.remove();\n\t\t\tdelete this._mathRenderElt;\n\t\t}\n\t\tif (this._mathSrcElt) {\n\t\t\tthis._mathSrcElt.remove();\n\t\t\tdelete this._mathSrcElt;\n\t\t}\n\t\t\n\t\tthis.dom.remove();\n\t}\n\n\t/**\n\t * Ensure focus on the inner editor whenever this node has focus.\n\t * This helps to prevent accidental deletions of math blocks.\n\t */\n\tensureFocus() {\n\t\tif (this._innerView && this._outerView.hasFocus()) {\n\t\t\tthis._innerView.focus();\n\t\t}\n\t}\n\n\t// == Updates ======================================= //\n\n\tupdate(node: ProseNode, decorations: Decoration[]) {\n\t\tif (!node.sameMarkup(this._node)) return false\n\t\tthis._node = node;\n\n\t\tif (this._innerView) {\n\t\t\tlet state = this._innerView.state;\n\n\t\t\tlet start = node.content.findDiffStart(state.doc.content)\n\t\t\tif (start != null) {\n\t\t\t\tlet diff = node.content.findDiffEnd(state.doc.content as any);\n\t\t\t\tif (diff) {\n\t\t\t\t\tlet { a: endA, b: endB } = diff;\n\t\t\t\t\tlet overlap = start - Math.min(endA, endB)\n\t\t\t\t\tif (overlap > 0) { endA += overlap; endB += overlap }\n\t\t\t\t\tthis._innerView.dispatch(\n\t\t\t\t\t\tstate.tr\n\t\t\t\t\t\t\t.replace(start, endB, node.slice(start, endA))\n\t\t\t\t\t\t\t.setMeta(\"fromOutside\", true))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._renderActive) {\n\t\t\tthis.renderMath();\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// == Events ===================================== //\n\n\tselectNode() {\n\t\tif (!this._outerView.editable) { return; }\n\t\tthis.dom.classList.add(\"ProseMirror-selectednode\");\n\t\tif (!this._editorActive) { this.openEditor(); }\n\t}\n\n\tdeselectNode() {\n\t\tthis.dom.classList.remove(\"ProseMirror-selectednode\");\n\t\tif (this._editorActive) { this.closeEditor(); }\n\t}\n\n\tstopEvent(event: Event): boolean {\n\t\treturn (this._innerView !== undefined)\n\t\t\t&& (event.target !== undefined)\n\t\t\t&& this._innerView.dom.contains(event.target as Node);\n\t}\n\n\tignoreMutation() { return true; }\n\n\t// == Rendering ===================================== //\n\n\trenderMath() {\n\t\tif (!this._mathRenderElt) { return; }\n\n\t\t// get tex string to render\n\t\tlet content = this._node.content.content;\n\t\tlet texString = \"\";\n\t\tif (content.length > 0 && content[0].textContent !== null) {\n\t\t\ttexString = content[0].textContent.trim();\n\t\t}\n\n\t\t// empty math?\n\t\tif (texString.length < 1) {\n\t\t\tthis.dom.classList.add(\"empty-math\");\n\t\t\t// clear rendered math, since this node is in an invalid state\n\t\t\twhile(this._mathRenderElt.firstChild){ this._mathRenderElt.firstChild.remove(); }\n\t\t\t// do not render empty math\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.dom.classList.remove(\"empty-math\");\n\t\t}\n\n\t\t// render katex, but fail gracefully\n\t\ttry {\n\t\t\tkatex.render(texString, this._mathRenderElt, this._katexOptions);\n\t\t\tthis._mathRenderElt.classList.remove(\"parse-error\");\n\t\t\tthis.dom.setAttribute(\"title\", \"\");\n\t\t} catch (err) {\n\t\t\tif (err instanceof ParseError) {\n\t\t\t\tconsole.error(err);\n\t\t\t\tthis._mathRenderElt.classList.add(\"parse-error\");\n\t\t\t\tthis.dom.setAttribute(\"title\", err.toString());\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t}\n\n\t// == Inner Editor ================================== //\n\n\tdispatchInner(tr: Transaction) {\n\t\tif (!this._innerView) { return; }\n\t\tlet { state, transactions } = this._innerView.state.applyTransaction(tr)\n\t\tthis._innerView.updateState(state)\n\n\t\tif (!tr.getMeta(\"fromOutside\")) {\n\t\t\tlet outerTr = this._outerView.state.tr, offsetMap = StepMap.offset(this._getPos() + 1)\n\t\t\tfor (let i = 0; i < transactions.length; i++) {\n\t\t\t\tlet steps = transactions[i].steps\n\t\t\t\tfor (let j = 0; j < steps.length; j++) {\n\t\t\t\t\tlet mapped = steps[j].map(offsetMap);\n\t\t\t\t\tif (!mapped) { throw Error(\"step discarded!\"); }\n\t\t\t\t\touterTr.step(mapped)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (outerTr.docChanged) this._outerView.dispatch(outerTr)\n\t\t}\n\t}\n\n\t/** \n\t * Mark the render pane as active.  CSS controls actual visibility.\n\t * @param isPreview If TRUE, we are currently in preview mode.\n\t */\n\tshowRender(isPreview: boolean) {\n\t\tif(isPreview) { this._mathRenderElt?.classList.add(\"math-preview\");    } \n\t\telse          { this._mathRenderElt?.classList.remove(\"math-preview\"); }\n\t\tthis._renderActive = true;\n\t}\n\n\t/** \n\t * Mark the render pane as inactive.  CSS controls actual visibility.\n\t */\n\thideRender() {\n\t\tthis._mathRenderElt?.classList.remove(\"math-preview\");\n\t\tthis._renderActive = false;\n\t}\n\n\topenEditor() {\n\t\tif (this._innerView) { throw Error(\"inner view should not exist!\"); }\n\n\t\t// create a nested ProseMirror view\n\t\tthis._innerView = new EditorView(this._mathSrcElt, {\n\t\t\tstate: EditorState.create({\n\t\t\t\tdoc: this._node,\n\t\t\t\tplugins: [keymap({\n\t\t\t\t\t\"Tab\": (state, dispatch) => {\n\t\t\t\t\t\tif(dispatch){ dispatch(state.tr.insertText(\"\\t\")); }\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\t\t\t\t\t\"Backspace\": chainCommands(deleteSelection, (state, dispatch, tr_inner) => {\n\t\t\t\t\t\t// default backspace behavior for non-empty selections\n\t\t\t\t\t\tif(!state.selection.empty) { return false; }\n\t\t\t\t\t\t// default backspace behavior when math node is non-empty\n\t\t\t\t\t\tif(this._node.textContent.length > 0){ return false; }\n\t\t\t\t\t\t// otherwise, we want to delete the empty math node and focus the outer view\n\t\t\t\t\t\tthis._outerView.dispatch(this._outerView.state.tr.insertText(\"\"));\n\t\t\t\t\t\tthis._outerView.focus();\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}),\n\t\t\t\t\t\"Ctrl-Backspace\" : (state, dispatch, tr_inner) => {\n\t\t\t\t\t\t// delete math node and focus the outer view\n\t\t\t\t\t\tthis._outerView.dispatch(this._outerView.state.tr.insertText(\"\"));\n\t\t\t\t\t\tthis._outerView.focus();\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\t\t\t\t\t\"Enter\": chainCommands(newlineInCode, collapseMathCmd(this._outerView, +1, false)),\n\t\t\t\t\t\"Ctrl-Enter\" : collapseMathCmd(this._outerView, +1, false),\n\t\t\t\t\t\"ArrowLeft\"  : collapseMathCmd(this._outerView, -1, true),\n\t\t\t\t\t\"ArrowRight\" : collapseMathCmd(this._outerView, +1, true),\n\t\t\t\t\t\"ArrowUp\"    : collapseMathCmd(this._outerView, -1, true),\n\t\t\t\t\t\"ArrowDown\"  : collapseMathCmd(this._outerView, +1, true),\n\t\t\t\t})]\n\t\t\t}),\n\t\t\tdispatchTransaction: this.dispatchInner.bind(this)\n\t\t})\n\n\t\t// focus element\n\t\tlet innerState = this._innerView.state;\n\t\tthis._innerView.focus();\n\n\t\t// request plugin state\n\t\tconst maybeState = this._mathPluginKey.getState(this._outerView.state);\n\t\tif(maybeState === null || maybeState === undefined) {\n\t\t\tconsole.error(\"[prosemirror-math] Error:  Unable to fetch math plugin state from key.\");\n\t\t}\n\n\t\t// get most recent cursor position from outer editor\n\t\tconst maybePos = maybeState?.prevCursorPos;\n\t\tlet prevCursorPos: number = maybePos ?? 0;\n\t\t\n\t\t// compute position that cursor should appear within the expanded math node\n\t\tlet innerPos = (prevCursorPos <= this._getPos()) ? 0 : this._node.nodeSize - 2;\n\t\tthis._innerView.dispatch(\n\t\t\tinnerState.tr.setSelection(\n\t\t\t\tTextSelection.create(innerState.doc, innerPos)\n\t\t\t)\n\t\t);\n\n\t\tthis._editorActive = true;\n\t\t\n\t\t// optionally activate preview window\n\t\tlet showPreview = this._isBlockMath && maybeState?.enableBlockPreview;\n\t\tif(showPreview) { this.showRender(true); }\n\t\telse            { this.hideRender();     }\n\t}\n\n\t/**\n\t * Called when the inner ProseMirror editor should close.\n\t * \n\t * @param render Optionally update the rendered math after closing. (which\n\t *    is generally what we want to do, since the user is done editing!)\n\t */\n\tcloseEditor(render: boolean = true) {\n\t\tif (this._innerView) {\n\t\t\tthis._innerView.destroy();\n\t\t\tthis._innerView = undefined;\n\t\t}\n\n\t\tif (render) { this.renderMath(); }\n\t\t\n\t\tthis._editorActive = false;\n\t\tthis.showRender(false);\n\t}\n}","/*---------------------------------------------------------\n *  Author: Benjamin R. Bray\n *  License: MIT (see LICENSE in project root for details)\n *--------------------------------------------------------*/\n\n// prosemirror imports\nimport { Schema, Node as ProseNode } from \"prosemirror-model\";\nimport { Plugin as ProsePlugin, PluginKey, PluginSpec } from \"prosemirror-state\";\nimport { MathView } from \"./math-nodeview\";\nimport { EditorView } from \"prosemirror-view\";\n\n////////////////////////////////////////////////////////////\n\nexport interface IMathPluginState {\n\tmacros: { [cmd:string] : string };\n\t/** A list of currently active `NodeView`s, in insertion order. */\n\tactiveNodeViews: MathView[];\n\t/** \n\t * Used to determine whether to place the cursor in the front- or back-most\n\t * position when expanding a math node, without overriding the default arrow\n\t * key behavior.\n\t */\n\tprevCursorPos: number;\n\t/** When TRUE, a preview pane is shown when editing block math. */\n\tenableBlockPreview: boolean;\n}\n\n// uniquely identifies the prosemirror-math plugin\nconst MATH_PLUGIN_KEY = new PluginKey<IMathPluginState>(\"prosemirror-math\");\n\n/** \n * Returns a function suitable for passing as a field in `EditorProps.nodeViews`.\n * @param displayMode TRUE for block math, FALSE for inline math.\n * @see https://prosemirror.net/docs/ref/#view.EditorProps.nodeViews\n */\nexport function createMathView(displayMode:boolean){\n\treturn (node: ProseNode, view: EditorView, getPos:boolean|(()=>number)):MathView => {\n\t\t/** @todo is this necessary?\n\t\t* Docs says that for any function proprs, the current plugin instance\n\t\t* will be bound to `this`.  However, the typings don't reflect this.\n\t\t*/\n\t\tlet pluginState = MATH_PLUGIN_KEY.getState(view.state);\n\t\tif(!pluginState){ throw new Error(\"no math plugin!\"); }\n\t\tlet nodeViews = pluginState.activeNodeViews;\n\n\t\t// set up NodeView\n\t\tlet nodeView = new MathView(\n\t\t\tnode, view, getPos as (() => number), \n\t\t\t{ katexOptions : { displayMode, macros: pluginState.macros } },\n\t\t\tdisplayMode,\n\t\t\tMATH_PLUGIN_KEY\n\t\t);\n\n\t\tnodeViews.push(nodeView);\n\t\treturn nodeView;\n\t}\n}\n\nexport interface IMathPluginOptions {\n\tenableBlockPreview: boolean;\n}\n\nexport function mathPluginSpec(options: IMathPluginOptions): PluginSpec<IMathPluginState> {\n\treturn {\n\t\tkey: MATH_PLUGIN_KEY,\n\t\tstate: {\n\t\t\tinit(config, instance){\n\t\t\t\treturn {\n\t\t\t\t\tmacros: {},\n\t\t\t\t\tactiveNodeViews: [],\n\t\t\t\t\tprevCursorPos: 0,\n\t\t\t\t\tenableBlockPreview: options.enableBlockPreview\n\t\t\t\t};\n\t\t\t},\n\t\t\tapply(tr, value, oldState, newState){\n\t\t\t\t// produce updated state field for this plugin\n\t\t\t\treturn {\n\t\t\t\t\t// these values are left unchanged\n\t\t\t\t\tactiveNodeViews    : value.activeNodeViews,\n\t\t\t\t\tmacros             : value.macros,\n\t\t\t\t\tenableBlockPreview : value.enableBlockPreview,\n\t\t\t\t\t// update with the second-most recent cursor pos\n\t\t\t\t\tprevCursorPos      : oldState.selection.from\n\t\t\t\t}\n\t\t\t},\n\t\t\t/** @todo (8/21/20) implement serialization for math plugin */\n\t\t\t// toJSON(value) { },\n\t\t\t// fromJSON(config, value, state){ return {}; }\n\t\t},\n\t\tprops: {\n\t\t\tnodeViews: {\n\t\t\t\t\"math_inline\" : createMathView(false),\n\t\t\t\t\"math_display\" : createMathView(true)\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function mathPlugin(options: IMathPluginOptions): ProsePlugin {\n\treturn new ProsePlugin(mathPluginSpec(options));\n}","/**\n * Note that for some of the `ParseRule`s defined below,\n * we define a `getAttrs` function, which, other than\n * defining node attributes, can be used to describe complex\n * match conditions for a rule.  \n \n * Returning `false` from `ParseRule.getAttrs` prevents the\n * rule from matching, while returning `null` indicates that\n * the default set of note attributes should be used.\n */\n\nimport { Node as ProseNode, Fragment, ParseRule, Schema, NodeType } from \"prosemirror-model\";\n\n////////////////////////////////////////////////////////////\n\nfunction getFirstMatch(root: Element, rules: ((root:Element) => false|string)[]) : false|string {\n\tfor(let rule of rules) {\n\t\tlet match: false|string = rule(root);\n\t\tif(match !== false) { return match; }\n\t}\n\treturn false;\n}\n\nfunction makeTextFragment<S extends Schema<any, any>>(text: string, schema: S): Fragment<S> {\n\treturn Fragment.from(schema.text(text) as ProseNode<S>);\n}\n\n////////////////////////////////////////////////////////////\n\n// -- Wikipedia ----------------------------------------- //\n\n/**\n * Look for a child node that matches the following template:\n * <img src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/...\"\n *              class=\"mwe-math-fallback-image-inline\"\n *              alt=\"...\" />\n */\nfunction texFromMediaWikiFallbackImage(root: Element): false|string {\n\tlet match = root.querySelector(\"img.mwe-math-fallback-image-inline[alt]\");\n\treturn (match?.getAttribute(\"alt\") ?? false);\n}\n\n/**\n * Look for a child node that matches the following template:\n * <math xmlns=\"http://www.w3.org/1998/Math/MathML\" alttext=\"...\">\n */\nfunction texFromMathML_01(root: Element): false|string {\n\tlet match = root.querySelector(\"math[alttext]\");\n\treturn (match?.getAttribute(\"alttext\") ?? false);\n}\n\n/**\n * Look for a child node that matches the following template:\n * <math xmlns=\"http://www.w3.org/1998/Math/MathML\" alttext=\"...\">\n */\nfunction texFromMathML_02(root: Element): false|string {\n\tlet match = root.querySelector(\"math annotation[encoding='application/x-tex'\");\n\treturn (match?.textContent ?? false);\n}\n\n/**\n * Look for a child node that matches the following template:\n * <script type=\"math/tex\"></script>\n */\nfunction texFromScriptTag(root: Element): false|string {\n\tlet match = root.querySelector(\"script[type*='math/tex']\");\n\treturn (match?.textContent ?? false);\n}\n\nfunction matchWikipedia(root: Element): false|string {\n\tlet match: false|string = getFirstMatch(root, [\n\t\ttexFromMediaWikiFallbackImage, \n\t\ttexFromMathML_01, \n\t\ttexFromMathML_02\n\t]);\n\t// TODO: if no tex string was found, but we have MathML, try to parse it\n\treturn match;\n}\n\n/**\n * Wikipedia formats block math inside a <dl>...</dl> element, as below.\n * \n *   - Evidently no CSS class is used to distinguish inline vs block math\n *   - Sometimes the `\\displaystyle` TeX command is present even in inline math\n * \n * ```html\n * <dl><dd><span class=\"mwe-math-element\">\n *     <span class=\"mwe-math-mathml-inline mwe-math-mathml-ally\" style=\"...\">\n *         <math xmlns=\"http://www.w3.org/1998/Math/MathML\" alttext=\"...\">\n *             <semantics>\n *                 <mrow class=\"MJX-TeXAtom-ORD\">...</mrow>\n *                 <annotation encoding=\"application/x-tex\">...</annotation>\n *             </semantics>\n *         </math>\n *         <img src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/...\"\n *              class=\"mwe-math-fallback-image-inline\"\n *              alt=\"...\" />\n *     </span>\n * </span></dd></dl>\n * ```\n */\nexport const wikipediaBlockMathParseRule: ParseRule = { \n\ttag: \"dl\",\n\tgetAttrs(p: Node|string):false|null {\n\t\tlet dl = p as HTMLDListElement;\n\n\t\t// <dl> must contain exactly one child\n\t\tif(dl.childElementCount !== 1) { return false; }\n\t\tlet dd = dl.firstChild as Element;\n\t\tif(dd.tagName !== \"DD\") { return false; } \n\t\t\n\t\t// <dd> must contain exactly one child\n\t\tif(dd.childElementCount !== 1) { return false; }\n\t\tlet mweElt = dd.firstChild as Element;\n\t\tif(!mweElt.classList.contains(\"mwe-math-element\")) { return false;}\n\n\t\t// success!  proceed to `getContent` for further processing\n\t\treturn null;\n\t},\n\tgetContent<S extends Schema<any, any>>(p: Node, schema: S): Fragment<S> {\n\t\t// search the matched element for a TeX string\n\t\tlet match: false|string = matchWikipedia(p as Element);\n\t\t// return a fragment representing the math node's children\n\t\tlet texString: string = match || \"\\\\text{\\\\color{red}(paste error)}\";\n\t\treturn makeTextFragment(texString, schema);\n\t}\n};\n\n/**\n * Parse rule for inline math content on Wikipedia of the following form:\n *\n * ```html\n * <span class=\"mwe-math-element\">\n *     <span class=\"mwe-math-mathml-inline mwe-math-mathml-ally\" style=\"...\">\n *         <math xmlns=\"http://www.w3.org/1998/Math/MathML\" alttext=\"...\">\n *             <semantics>\n *                 <mrow class=\"MJX-TeXAtom-ORD\">...</mrow>\n *                 <annotation encoding=\"application/x-tex\">...</annotation>\n *             </semantics>\n *         </math>\n *         <img src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/...\"\n *              class=\"mwe-math-fallback-image-inline\"\n *              alt=\"...\" />\n *     </span>\n * </span>\n * ```\n */\nexport const wikipediaInlineMathParseRule: ParseRule = {\n\ttag: \"span\",\n\tgetAttrs(p: Node|string):false|null {\n\t\tlet span = p as HTMLSpanElement;\n\t\tif(!span.classList.contains(\"mwe-math-element\")) { return false;}\n\t\t// success!  proceed to `getContent` for further processing\n\t\treturn null;\n\t},\n\tgetContent<S extends Schema<any, any>>(p: Node, schema: S): Fragment<S> {\n\t\t// search the matched element for a TeX string\n\t\tlet match: false|string = matchWikipedia(p as Element);\n\t\t// return a fragment representing the math node's children\n\t\tlet texString: string = match || \"\\\\text{\\\\color{red}(paste error)}\";\n\t\treturn makeTextFragment(texString, schema);\n\t}\n}\n\n// -- MathJax ------------------------------------------- //\n\n////////////////////////////////////////////////////////////\n\nexport const defaultInlineMathParseRules: ParseRule[] = [\n\twikipediaInlineMathParseRule,\n]\n\nexport const defaultBlockMathParseRules: ParseRule[] = [\n\twikipediaBlockMathParseRule,\n]","/*---------------------------------------------------------\n *  Author: Benjamin R. Bray\n *  License: MIT (see LICENSE in project root for details)\n *--------------------------------------------------------*/\n\n// prosemirror imports\nimport { Node as ProseNode, Fragment, MarkSpec, NodeSpec, Schema, SchemaSpec, NodeType } from \"prosemirror-model\";\nimport { defaultBlockMathParseRules, defaultInlineMathParseRules } from \"./plugins/math-paste-rules\";\nimport { SchemaSpecMarkT, SchemaSpecNodeT } from \"./utils/types\";\n\n////////////////////////////////////////////////////////////\n\n/**\n * Borrowed from ProseMirror typings, modified to exclude OrderedMaps in spec,\n * in order to help with the schema-building functions below.\n * \n * NOTE:  TypeScript's typings for the spread operator { ...a, ...b } are only\n * an approximation to the true type, and have difficulty with optional fields.\n * So, unlike the SchemaSpec type, the `marks` field is NOT optional here.\n *\n * function example<T extends string>(x: { [name in T]: string; } | null) {\n *     const s = { ...x }; // inferred to have type `{}`.\n * }\n * \n * @see https://github.com/microsoft/TypeScript/issues/10727\n */\ninterface SchemaSpecJson<N extends string = any, M extends string = any> extends SchemaSpec<N,M> {\n    nodes: { [name in N]: NodeSpec };\n    marks: { [name in M]: MarkSpec };\n    topNode?: string | null;\n}\n\ntype MathSpecNodeT = SchemaSpecNodeT<typeof mathSchemaSpec>;\ntype MathSpecMarkT = SchemaSpecMarkT<typeof mathSchemaSpec>;\n\n////////////////////////////////////////////////////////////\n\n// force typescript to infer generic type arguments for SchemaSpec\nfunction createSchemaSpec<N extends string = any, M extends string = any>(spec: SchemaSpecJson<N, M>): SchemaSpecJson<N, M> {\n\treturn spec;\n}\n\n// bare minimum ProseMirror schema for working with math nodes\nexport const mathSchemaSpec = createSchemaSpec({\n\tnodes: {\n\t\t// :: NodeSpec top-level document node\n\t\tdoc: {\n\t\t\tcontent: \"block+\"\n\t\t},\n\t\tparagraph: {\n\t\t\tcontent: \"inline*\",\n\t\t\tgroup: \"block\",\n\t\t\tparseDOM: [{ tag: \"p\" }],\n\t\t\ttoDOM() { return [\"p\", 0]; }\n\t\t},\n\t\tmath_inline: {\n\t\t\tgroup: \"inline math\",\n\t\t\tcontent: \"text*\",\n\t\t\tinline: true,\n\t\t\tatom: true,\n\t\t\ttoDOM: () => [\"math-inline\", { class: \"math-node\" }, 0],\n\t\t\tparseDOM: [\n\t\t\t\t{ tag: \"math-inline\" },\n\t\t\t\t...defaultInlineMathParseRules\n\t\t\t]\n\t\t},\n\t\tmath_display: {\n\t\t\tgroup: \"block math\",\n\t\t\tcontent: \"text*\",\n\t\t\tatom: true,\n\t\t\tcode: true,\n\t\t\ttoDOM: () => [\"math-display\", { class: \"math-node\" }, 0],\n\t\t\tparseDOM: [\n\t\t\t\t{ tag: \"math-display\" },\n\t\t\t\t...defaultBlockMathParseRules\n\t\t\t]\n\t\t},\n\t\ttext: {\n\t\t\tgroup: \"inline\"\n\t\t}\n\t},\n\tmarks: {\n\t\tmath_select: {\n\t\t\ttoDOM() { return [\"math-select\", 0] },\n\t\t\tparseDOM: [{ tag: \"math-select\" }]\n\t\t}\n\t}\n});\n\n/**\n * Use the prosemirror-math default SchemaSpec to create a new Schema.\n */\nexport function createMathSchema() {\n\treturn new Schema(mathSchemaSpec);\n}\n\n/**\n * Create a new SchemaSpec by adding math nodes to an existing spec.\n\n * @deprecated This function is included for demonstration/testing only. For the\n *     time being, I highly recommend adding the math nodes manually to your own\n *     ProseMirror spec to avoid unexpected interactions between the math nodes\n *     and your own spec.  Use the example spec for reference.\n *\n * @param baseSpec The SchemaSpec to extend.  Must specify a `marks` field, and\n *     must be a raw object (not an OrderedMap).\n */\nexport function extendMathSchemaSpec<N extends string, M extends string>(\n\tbaseSpec: SchemaSpecJson<N,M>\n): SchemaSpecJson<N|MathSpecNodeT,M|MathSpecMarkT> {\n\tlet nodes = { ...baseSpec.nodes, ...mathSchemaSpec.nodes }\n\tlet marks = { ...baseSpec.marks, ...mathSchemaSpec.marks }\n\treturn { nodes, marks, topNode : baseSpec.topNode };\n}","import { NodeSelection } from \"prosemirror-state\";\nimport { Command as ProseCommand } from \"prosemirror-commands\";\n\nexport const mathBackspaceCmd:ProseCommand = (state, dispatch) => {\n\t// check node before\n\tlet { $from } = state.selection;\n\tlet nodeBefore = $from.nodeBefore;\n\tif(!nodeBefore){ return false; }\n\t\n\tif(nodeBefore.type.name == \"math_inline\"){\n\t\t// select math node\n\t\tlet index = $from.index($from.depth);\n\t\tlet $beforePos = state.doc.resolve($from.posAtIndex(index-1));\n\t\tif(dispatch) { dispatch(state.tr.setSelection(new NodeSelection($beforePos))); }\n\t\treturn true;\n\t} else if(nodeBefore.type.name == \"math_block\"){\n\t\t/** @todo (8/1/20) implement backspace for math blocks\n\t\t * check how code blocks behave when pressing backspace\n\t\t */\n\t\treturn false;\n\t}\n\n\treturn false;\n}","/*---------------------------------------------------------\n *  Author: Benjamin R. Bray\n *  License: MIT (see LICENSE in project root for details)\n *--------------------------------------------------------*/\n\nimport { InputRule } from \"prosemirror-inputrules\";\nimport { NodeType } from \"prosemirror-model\";\nimport { NodeSelection } from \"prosemirror-state\";\n\n////////////////////////////////////////////////////////////\n\n// ---- Inline Input Rules ------------------------------ //\n\n// simple input rule for inline math\nexport const REGEX_INLINE_MATH_DOLLARS:RegExp = /\\$(.+)\\$/; //new RegExp(\"\\$(.+)\\$\", \"i\");\n\n// negative lookbehind regex notation allows for escaped \\$ delimiters\n// (requires browser supporting ECMA2018 standard -- currently only Chrome / FF)\n// (see https://javascript.info/regexp-lookahead-lookbehind)\nexport const REGEX_INLINE_MATH_DOLLARS_ESCAPED:RegExp = (() => {\n    // attempt to create regex with negative lookbehind\n    try      { return new RegExp(\"(?<!\\\\\\\\)\\\\$(.+)(?<!\\\\\\\\)\\\\$\"); }\n    catch(e) { return REGEX_INLINE_MATH_DOLLARS;                  }\n})();\n\n// ---- Block Input Rules ------------------------------- //\n\n// simple inputrule for block math\nexport const REGEX_BLOCK_MATH_DOLLARS:RegExp = /\\$\\$\\s+$/; //new RegExp(\"\\$\\$\\s+$\", \"i\");\n\n////////////////////////////////////////////////////////////\n\nexport function makeInlineMathInputRule(pattern: RegExp, nodeType: NodeType, getAttrs?: (match: string[]) => any) {\n\treturn new InputRule(pattern, (state, match, start, end) => {\n\t\tlet $start = state.doc.resolve(start);\n\t\tlet index = $start.index();\n\t\tlet $end = state.doc.resolve(end);\n\t\t// get attrs\n\t\tlet attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs\n\t\t// check if replacement valid\n\t\tif (!$start.parent.canReplaceWith(index, $end.index(), nodeType)) {\n\t\t\treturn null;\n\t\t}\n\t\t// perform replacement\n\t\treturn state.tr.replaceRangeWith(\n\t\t\tstart, end,\n\t\t\tnodeType.create(attrs, nodeType.schema.text(match[1]))\n\t\t);\n\t});\n}\n\nexport function makeBlockMathInputRule(pattern: RegExp, nodeType: NodeType, getAttrs?: (match: string[]) => any) {\n\treturn new InputRule(pattern, (state, match, start, end) => {\n\t\tlet $start = state.doc.resolve(start)\n\t\tlet attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs\n\t\tif (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), nodeType)) return null\n\t\tlet tr = state.tr\n\t\t\t.delete(start, end)\n\t\t\t.setBlockType(start, start, nodeType, attrs);\n\n\t\treturn tr.setSelection(NodeSelection.create(\n\t\t\ttr.doc, tr.mapping.map($start.pos - 1)\n\t\t));\n\t})\n}","/*---------------------------------------------------------\n *  Author: Benjamin R. Bray\n *  License: MIT (see LICENSE in project root for details)\n *--------------------------------------------------------*/\n\n// prosemirror imports\nimport { EditorState, Transaction, Selection as ProseSelection, Plugin as ProsePlugin } from \"prosemirror-state\";\nimport { DecorationSet, Decoration } from \"prosemirror-view\";\nimport { Fragment, Node as ProseNode } from \"prosemirror-model\";\n\n////////////////////////////////////////////////////////////\n\n/**\n * Uses the selection to determine which math_select decorations\n * should be applied to the given document.\n * @param arg Should be either a Transaction or an EditorState,\n *     although any object with `selection` and `doc` will work.\n */\nconst checkSelection = (arg:{ selection:ProseSelection, doc:ProseNode }) => {\n\tlet { from, to } = arg.selection;\n\tlet content: Fragment = arg.selection.content().content;\n\n\tlet result: { start: number, end: number }[] = [];\n\n\tcontent.descendants((node: ProseNode, pos: number, parent: ProseNode) => {\n\t\tif (node.type.name == \"text\") { return false; }\n\t\tif (node.type.name.startsWith(\"math_\")) {\n\t\t\tresult.push({\n\t\t\t\tstart: Math.max(from + pos - 1, 0),\n\t\t\t\tend: from + pos + node.nodeSize - 1\n\t\t\t})\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t});\n\n\treturn DecorationSet.create(arg.doc, result.map(\n\t\t({start, end}) => Decoration.node(start, end, { class: \"math-select\" })\n\t))\n}\n\n/**\n * Due to the internals of KaTeX, by default, selecting rendered\n * math will put a box around each individual character of a\n * math expression.  This plugin attempts to make math selections\n * slightly prettier by instead setting a background color on the node.\n * \n * (remember to use the included math.css!)\n * \n * @todo (6/13/20) math selection rectangles are not quite even with text\n */\nexport const mathSelectPlugin: ProsePlugin = new ProsePlugin({\n\tstate: {\n\t\tinit(config: Object, partialState: EditorState) {\n\t\t\treturn checkSelection(partialState);\n\t\t},\n\t\tapply(tr:Transaction, oldState: EditorState) {\n\t\t\tif (!tr.selection || !tr.selectionSet) { return oldState; }\n\t\t\tlet sel = checkSelection(tr);\n\t\t\treturn sel;\n\t\t}\n\t},\n\tprops: {\n\t\tdecorations: (state:EditorState) => { return mathSelectPlugin.getState(state); },\n\t}\n});","import { Command } from \"prosemirror-commands\";\nimport { NodeType } from \"prosemirror-model\";\nimport { EditorState, NodeSelection, Transaction } from \"prosemirror-state\";\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Returns a new command that can be used to inserts a new math node at the\n * user's current document position, provided that the document schema actually\n * allows a math node to be placed there.\n * \n * @param mathNodeType An instance for either your math_inline or math_display\n *     NodeType.  Must belong to the same schema that your EditorState uses!\n */\nexport function insertMathCmd(mathNodeType: NodeType): Command {\n\treturn function(state:EditorState, dispatch:((tr:Transaction)=>void)|undefined){\n\t\tlet { $from } = state.selection, index = $from.index();\n\t\tif (!$from.parent.canReplaceWith(index, index, mathNodeType)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dispatch){\n\t\t\tlet tr = state.tr.replaceSelectionWith(mathNodeType.create({}));\n\t\t\ttr = tr.setSelection(NodeSelection.create(tr.doc, $from.pos));\n\t\t\tdispatch(tr);\n\t\t}\n\t\treturn true;\n\t}\n}","import { Node as ProseNode, Mark, Slice, Schema, NodeType, MarkType, Fragment } from \"prosemirror-model\";\nimport { createMathSchema } from \"src/math-schema\";\nimport { SchemaMarkT, SchemaNodeT } from \"./types\";\n\n////////////////////////////////////////////////////////////////////////////////\n\ntype TypedNode<T extends string, S extends Schema<T,any>> = ProseNode<S> & { type: NodeType<S> & { name: T } };\ntype TypedMark<T extends string, S extends Schema<T,any>> = Mark<S>      & { type: MarkType<S> & { name: T } };\n\ntype NodeSerializer<T extends string, S extends Schema<T,any>> = (node: TypedNode<T, S>) => string;\ntype MarkSerializer<T extends string, S extends Schema<T,any>> = (mark: TypedMark<T, S>) => string;\n\nclass ProseMirrorTextSerializer<S extends Schema<any, any>> {\n\n\tpublic nodes: { [name: string] : NodeSerializer<string, S>|undefined };\n\tpublic marks: { [name: string] : NodeSerializer<string, S>|undefined };\n\n\tconstructor(fns: {\n\t\t\tnodes?: { [name in SchemaNodeT<S>]? : NodeSerializer<name, S> },\n\t\t\tmarks?: { [name in SchemaMarkT<S>]? : MarkSerializer<name, S> },\n\t\t}, base?: ProseMirrorTextSerializer<S>\n\t) {\n\t\t// use base serializer as a fallback\n\t\tthis.nodes = { ...base?.nodes, ...fns.nodes };\n\t\tthis.marks = { ...base?.marks, ...fns.marks };\n\t}\n\n\tserializeFragment(fragment: Fragment<S>): string {\n\t\t// adapted from the undocumented `Fragment.textBetween` function\n\t\t// https://github.com/ProseMirror/prosemirror-model/blob/eef20c8c6dbf841b1d70859df5d59c21b5108a4f/src/fragment.js#L46\n\t\tlet blockSeparator = \"\\n\\n\";\n\t\tlet leafText:string|undefined = undefined;\n\t\tlet text: string = \"\";\n\t\tlet separated: boolean = true;\n\n\t\tlet from = 0;\n\t\tlet to = fragment.size;\n\n\t\tfragment.nodesBetween(from, to, (node, pos) => {\n\t\t\t// check if one of our custom serializers handles this node\n\t\t\tlet serialized: string|null = this.serializeNode(node);\n\t\t\tif(serialized !== null) {\n\t\t\t\ttext += serialized;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (node.isText) {\n\t\t\t\ttext += node.text?.slice(Math.max(from, pos) - pos, to - pos) || \"\";\n\t\t\t\tseparated = !blockSeparator\n\t\t\t} else if (node.isLeaf && leafText) {\n\t\t\t\ttext += leafText\n\t\t\t\tseparated = !blockSeparator\n\t\t\t} else if (!separated && node.isBlock) {\n\t\t\t\ttext += blockSeparator\n\t\t\t\tseparated = true\n\t\t\t}\n\t\t}, 0);\n\n\t\treturn text;\n\t}\n\n\tserializeSlice(slice: Slice<S>): string {\n\t\treturn this.serializeFragment(slice.content);\n\t}\n\n\tserializeNode(node: ProseNode<S>): string|null {\n\t\t// check if one of our custom serializers handles this node\n\t\tlet nodeSerializer = this.nodes[node.type.name];\n\t\tif(nodeSerializer !== undefined) {\n\t\t\treturn nodeSerializer(node);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n}\n\nexport const mathSerializer = new ProseMirrorTextSerializer<ReturnType<typeof createMathSchema>>({\n\tnodes : {\n\t\t\"math_inline\"  : (node) => `$${node.textContent}$`,\n\t\t\"math_display\" : (node) => `\\n\\n$$\\n${node.textContent}\\n$$`\n\t}\n});"],"names":["TextSelection","katex","ParseError","StepMap","EditorView","EditorState","keymap","chainCommands","deleteSelection","newlineInCode","PluginKey","ProsePlugin","Fragment","Schema","NodeSelection","InputRule","DecorationSet","Decoration"],"mappings":"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"}